var cov_2lnznilja5=function(){var path='C:\\CA\\GIT_Sandbox\\sandbox\\Challenges\\Term2\\tdd_intro\\calc_tests.js',hash='d8b12049c2e196efcb00ce48ed58aee26134b5e1',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'C:\\CA\\GIT_Sandbox\\sandbox\\Challenges\\Term2\\tdd_intro\\calc_tests.js',statementMap:{'0':{start:{line:1,column:15},end:{line:1,column:32}},'1':{start:{line:2,column:22},end:{line:2,column:48}},'2':{start:{line:4,column:10},end:{line:4,column:23}},'3':{start:{line:6,column:0},end:{line:14,column:2}},'4':{start:{line:7,column:2},end:{line:13,column:4}},'5':{start:{line:10,column:4},end:{line:10,column:29}},'6':{start:{line:11,column:4},end:{line:11,column:31}},'7':{start:{line:12,column:4},end:{line:12,column:38}},'8':{start:{line:16,column:0},end:{line:21,column:2}},'9':{start:{line:17,column:2},end:{line:20,column:4}},'10':{start:{line:19,column:4},end:{line:19,column:37}},'11':{start:{line:23,column:0},end:{line:27,column:2}},'12':{start:{line:24,column:2},end:{line:26,column:4}},'13':{start:{line:25,column:4},end:{line:25,column:36}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:6,column:16},end:{line:6,column:17}},loc:{start:{line:6,column:22},end:{line:14,column:1}},line:6},'1':{name:'(anonymous_1)',decl:{start:{line:7,column:40},end:{line:7,column:41}},loc:{start:{line:7,column:46},end:{line:13,column:3}},line:7},'2':{name:'(anonymous_2)',decl:{start:{line:16,column:21},end:{line:16,column:22}},loc:{start:{line:16,column:27},end:{line:21,column:1}},line:16},'3':{name:'(anonymous_3)',decl:{start:{line:17,column:36},end:{line:17,column:37}},loc:{start:{line:17,column:42},end:{line:20,column:3}},line:17},'4':{name:'(anonymous_4)',decl:{start:{line:23,column:19},end:{line:23,column:20}},loc:{start:{line:23,column:25},end:{line:27,column:1}},line:23},'5':{name:'(anonymous_5)',decl:{start:{line:24,column:34},end:{line:24,column:35}},loc:{start:{line:24,column:40},end:{line:26,column:3}},line:24}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const assert=(cov_2lnznilja5.s[0]++,require('assert'));const{Calculate}=(cov_2lnznilja5.s[1]++,require('./calculator.js'));const c=(cov_2lnznilja5.s[2]++,new Calculate());cov_2lnznilja5.s[3]++;describe("Add",()=>{cov_2lnznilja5.f[0]++;cov_2lnznilja5.s[4]++;it("Should add all numbers together",()=>{cov_2lnznilja5.f[1]++;cov_2lnznilja5.s[5]++;// eg. add(1,2) should equal 3
assert.equal(1,c.add(1));cov_2lnznilja5.s[6]++;assert.equal(3,c.add(1,2));cov_2lnznilja5.s[7]++;assert.equal(100,c.add(10,40,50));});});cov_2lnznilja5.s[8]++;describe("Subtract",()=>{cov_2lnznilja5.f[2]++;cov_2lnznilja5.s[9]++;it("Should subtract two numbers",()=>{cov_2lnznilja5.f[3]++;cov_2lnznilja5.s[10]++;// eg. subrtract(10,6) should equal 4
assert.equal(4,c.subtract(10,6));});});cov_2lnznilja5.s[11]++;describe("Divide",()=>{cov_2lnznilja5.f[4]++;cov_2lnznilja5.s[12]++;it("Should divide two numbers",()=>{cov_2lnznilja5.f[5]++;cov_2lnznilja5.s[13]++;assert.equal(2,c.divide(10,5));});});